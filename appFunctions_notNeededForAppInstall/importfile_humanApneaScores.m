function N2Marker = importfile_humanApneaScores(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   N2MARKER = IMPORTFILE(FILENAME) Reads data from text file FILENAME for
%   the default selection.
%
%   N2MARKER = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   N2Marker = importfile('5N2_Marker.csv', 3, 587);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/01/17 13:17:17

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 3;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: categorical (%C)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: datetimes (%{MM/dd/yyyy hh:mm:ss a}D)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%C%f%f%f%f%f%f%f%f%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
N2Marker = table(dataArray{1:end-1}, 'VariableNames', {'StartTime','EndTime','Duration','Label','MarkerStatisticsSpont','MarkerStatisticsSpont1','MarkerStatisticsPS','MarkerStatisticsPS1','StartDP_original','EndDP','AllMarker','DurationDP','StartTime1'});

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% N2Marker.StartTime1=datenum(N2Marker.StartTime1);

